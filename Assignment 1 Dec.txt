1 2 3 
4 5 6 
7 8 9 

output : array 90 degree rotate 
7 4 1
8 5 2 
9 6 3

public class Main 
     {  
      public static void main(String args[]){ 
       int a[][]={{1,2,3},{4,5,6},{7,8,9}};    
       System.out.println("Original Matrix:");  
       for(int i=0;i<3;i++)  
        {  
        for(int j=0;j<3;j++)  
         {  
          System.out.print(" "+a[i][j]+" ");  
         }  
           System.out.println(" ");  
         }  
        System.out.println("Rotate Matrix by 90 Degrees:");  
        for(int i=0;i<3;i++)  
       {  
           for(int j=2;j>=0;j--)  
       {  
          System.out.print(" "+a[j][i]+" ");  
         }  
         System.out.println(" ");  
       }  
    }  
}   


==========================================================================
sprial matrix : 

1 2 3 4 5 
6 7 8 9 10
11 12 13 14 15
16 17 18 19 20
21 22 23 24 25 

output : 
1 2 3 4 5 10 15 20 25 24 23 22 21 16 11 6 7 8 9 14 19 18 17 12 13


public class Main {
    static void printArray(int arr[][]) {
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr[i].length; j++) {
                System.out.print(arr[i][j] + " ");
            }
            System.out.println();
        }
    }

    static void spiral(int[][] a, int r, int c) {
        int topRow = 0, bottomRow = r - 1, leftCol = 0, rightCol = c - 1;
        int totalElements = 0;
        while (totalElements < r * c) {
            for (int i = leftCol; i <= rightCol && totalElements < r * c; i++) {
                System.out.print(a[topRow][i] + " ");
                totalElements++;
            }
            topRow++;
            for (int i = topRow; i <= bottomRow && totalElements < r * c; i++) {
                System.out.print(a[i][rightCol] + " ");
                totalElements++;
            }
            rightCol--;
            for (int i = rightCol; i >= leftCol && totalElements < r * c; i--) {
                System.out.print(a[bottomRow][i] + " ");
                totalElements++;
            }
            bottomRow--;
            for (int i = bottomRow; i >= topRow && totalElements < r * c; i--) {
                System.out.print(a[i][leftCol] + " ");
                totalElements++;
            }
            leftCol++;
        }
    }

    public static void main(String[] args) {
        int r = 3, c = 4;
        int arr[][] = { { 1, 2, 3, 4 }, { 5, 6, 7, 8 }, { 9, 10, 11, 12 } };
        System.out.println("orinal");
        printArray(arr);
        System.out.println("spiral matrix");
        spiral(arr, r, c);
    }
}
==============================================================================
transpose matrix 

public class Main{
    static void printArray(int a[][]){
        for(int i=0;i<a.length;i++){
            for(int j=0;j<a[i].length;j++){
                System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
    }
    static int[][]transpose(int a[][],int r,int c){
        int ans[][]=new int[c][r];
        for(int i=0;i<c;i++){
            for(int j=0;j<r;j++){
                ans[i][j]=a[j][i];
            } 
            
        }
        return ans;
    }
    public static void main(String args[]){
        int r=3,c=3;
        int a[][]={{1,2,3},{4,5,6},{7,8,9}};
        System.out.println("Orignal Array");
        printArray(a);
        System.out.println();
        System.out.println("transpose of Array");
        int [][] ans=transpose(a,r,c);
        printArray(ans);
    }
}
=====================================================================
multiplication of 2 D array


import java.util.*;
public class Main {
    public static void printArray(int a[][]) {
        for (int i = 0; i < a.length; i++) {
            for (int j = 0; j < a[i].length; j++) {
                System.out.print(a[i][j] + " ");
            }
            System.out.println();
        }
       
    }
   static void multi(int arr1[][], int r1, int c1, int arr2[][], int r2, int c2) {
        if (c1 != r2) {
            System.out.println("invalid");
            return;
        }
        int mul[][] = new int[r1][c2];
        for (int i = 0; i < r1; i++) {
            for (int j = 0; j < c2; j++) {
                for (int k = 0; k < c1; k++) {
                    mul[i][j] += arr1[i][k] * arr2[k][j];
                }
            }
        }
        System.out.println();
        printArray(mul);
    }

    public static void main(String[] args) {
        int a[][] = { { 1, 2, 3 }, { 1, 2, 3 }, { 1, 2, 3 } };
        int b[][] = { { 1, 2, 3 }, { 1, 2, 3 }, { 1, 2, 3 } };
        multi(a, 3, 3, a, 3, 3);
    }
}
===================================================================================